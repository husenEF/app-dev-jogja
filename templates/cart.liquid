{% comment %}
  Shopify Cart Template with Modern Design
  Features: Responsive layout, empty cart state, animations, and modern styling
{% endcomment %}



<div class="cart-wrapper">
  <!-- Cart Header -->
  <div class="cart-header">
    <h1 class="cart-title">Shopping Cart</h1>
    <p class="cart-subtitle">
      {% if cart.item_count > 0 %}
        You have {{ cart.item_count }} 
        {% if cart.item_count == 1 %}item{% else %}items{% endif %} 
        in your cart
      {% else %}
        Your cart is currently empty
      {% endif %}
    </p>
  </div>

  {% if cart.item_count == 0 %}
    <!-- Empty Cart State -->
    <div class="empty-cart">
      <div class="empty-cart-icon">
        <svg viewBox="0 0 24 24">
          <path d="M7 4V2C7 1.45 7.45 1 8 1H16C16.55 1 17 1.45 17 2V4H20C20.55 4 21 4.45 21 5S20.55 6 20 6H19V19C19 20.1 18.1 21 17 21H7C5.9 21 5 20.1 5 19V6H4C3.45 6 3 5.55 3 5S3.45 4 4 4H7ZM9 3V4H15V3H9ZM7 6V19H17V6H7Z"/>
        </svg>
      </div>
      <h2>Your cart is empty</h2>
      <p>Looks like you haven't added anything to your cart yet.<br>Start shopping to fill it up!</p>
      <a href="{{ routes.all_products_collection_url }}" class="continue-shopping-btn">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M7 18c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.15.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12L8.1 13h7.45c.75 0 1.41-.41 1.75-1.03L21.7 4H5.21l-.94-2H1zm16 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
        </svg>
        Continue Shopping
      </a>
    </div>
  {% else %}
    <!-- Cart with Items -->
    <form action="{{ routes.cart_url }}" method="post" novalidate class="cart-form">
      <div class="cart-content">
        <!-- Cart Items -->
        <div class="cart-items">
          {% for item in cart.items %}
            <div class="cart-item" data-key="{{ item.key }}">
              <!-- Product Image -->
              <div class="item-image">
                {% if item.image %}
                  <img src="{{ item.image | img_url: '240x240' }}" 
                       alt="{{ item.title | escape }}"
                       loading="lazy">
                {% else %}
                  <div style="background: #f0f0f0; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #999;">
                    No Image
                  </div>
                {% endif %}
              </div>

              <!-- Product Details -->
              <div class="item-details">
                <h3>{{ item.product.title }}</h3>
                {% unless item.product.has_only_default_variant %}
                  <p>{{ item.variant.title }}</p>
                {% endunless %}
                {% if item.properties.size > 0 %}
                  {% for property in item.properties %}
                    {% unless property.last == blank %}
                      <p>{{ property.first }}: {{ property.last }}</p>
                    {% endunless %}
                  {% endfor %}
                {% endif %}
                <p class="item-price">{{ item.final_price | money }}</p>
              </div>

              <!-- Quantity Controls -->
              <div class="quantity-controls">
                <button type="button" class="quantity-btn" onclick="updateQuantity('{{ item.key }}', {{ item.quantity | minus: 1 }})">âˆ’</button>
                <input type="number" 
                       class="quantity-input" 
                       name="updates[{{ item.key }}]" 
                       value="{{ item.quantity }}" 
                       min="0"
                       onchange="updateQuantity('{{ item.key }}', this.value)">
                <button type="button" class="quantity-btn" onclick="updateQuantity('{{ item.key }}', {{ item.quantity | plus: 1 }})">+</button>
              </div>

              <!-- Remove Button -->
              <button type="button" class="remove-btn" onclick="removeItem('{{ item.key }}')">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                </svg>
              </button>
            </div>
          {% endfor %}
        </div>

        <!-- Cart Summary -->
        <div class="cart-summary">
          <h2 class="summary-title">Order Summary</h2>
          
          <div class="summary-row">
            <span>Subtotal ({{ cart.item_count }} items)</span>
            <span>{{ cart.total_price | money }}</span>
          </div>

          {% if cart.cart_level_discount_applications.size > 0 %}
            {% for discount in cart.cart_level_discount_applications %}
              <div class="summary-row">
                <span>{{ discount.title }} Discount</span>
                <span>-{{ discount.total_allocated_amount | money }}</span>
              </div>
            {% endfor %}
          {% endif %}

          <div class="summary-row">
            <span>Shipping</span>
            <span>Calculated at checkout</span>
          </div>

          <div class="summary-row">
            <strong>Total</strong>
            <strong>{{ cart.total_price | money }}</strong>
          </div>

          <button type="submit" class="checkout-btn" name="add" id="checkout-btn">
            Proceed to Checkout
          </button>

          <div class="secure-checkout">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11.5C15.4,11.5 16,12.1 16,12.7V16.7C16,17.4 15.4,18 14.8,18H9.2C8.6,18 8,17.4 8,16.8V12.8C8,12.2 8.6,11.6 9.2,11.6V10C9.2,8.6 10.6,7 12,7M12,8.2C11.2,8.2 10.5,8.7 10.5,10V11.5H13.5V10C13.5,8.7 12.8,8.2 12,8.2Z"/>
            </svg>
            Secure Checkout
          </div>
        </div>
      </div>
    </form>
  {% endif %}
</div>

<script>
  // Cart functionality
  function updateQuantity(key, quantity) {
    quantity = parseInt(quantity);
    if (quantity < 0) quantity = 0;
    
    const formData = new FormData();
    formData.append('updates[' + key + ']', quantity);
    
    fetch('/cart/update.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      location.reload(); // Refresh to show updated cart
    })
    .catch(error => {
      console.error('Error updating quantity:', error);
    });
  }

  function removeItem(key) {
    if (confirm('Are you sure you want to remove this item from your cart?')) {
      updateQuantity(key, 0);
    }
  }

  // Add smooth animations
  document.addEventListener('DOMContentLoaded', function() {
    const cartItems = document.querySelectorAll('.cart-item');
    cartItems.forEach((item, index) => {
      item.style.opacity = '0';
      item.style.transform = 'translateY(20px)';
      setTimeout(() => {
        item.style.transition = 'all 0.5s ease';
        item.style.opacity = '1';
        item.style.transform = 'translateY(0)';
      }, index * 100);
    });
  });

  // Form submission handling
  document.addEventListener('DOMContentLoaded', function() {
    const cartForm = document.querySelector('.cart-form');
    if (cartForm) {
      cartForm.addEventListener('submit', function(e) {
        const checkoutBtn = document.getElementById('checkout-btn');
        checkoutBtn.innerHTML = 'Processing...';
        checkoutBtn.disabled = true;
      });
    }
  });
</script>